#!/usr/bin/env zsh

# ua: uv activate
#
# DESCRIPTION:
#   Traverses up the directory tree from the current directory searching for
#   a valid uv Python virtual environment and activates it. A valid environment
#   is identified by the presence of both a 'uv.lock' directory and a '.venv'
#   directory containing an activation script.
#
# USAGE:
#   ua
#
# BEHAVIOR:
#   1. Starts from current directory
#   2. Checks each parent directory for uv.lock and .venv
#   3. If found, activates the virtual environment
#   4. If not found by root (/), returns to starting directory
#
# EXIT STATUS:
#   0 - Successfully found and activated a uv environment
#   1 - Failed to find a valid uv environment
#
# EXAMPLES:
#   # Activate nearest uv environment up the directory tree
#   $ ua
#
#   # Use from any subdirectory of a uv project
#   $ cd ~/projects/myproject/src/submodule
#   $ ua  # will find and activate ~/projects/myproject/.venv if valid

ua() {
  local initial_dir=$PWD
  local current_dir=$PWD

  while [[ $current_dir != "/" ]]; do
    if [[ -d "$current_dir/uv.lock" ]] && [[ -d "$current_dir/.venv" ]]; then
      if [[ -f "$current_dir/.venv/bin/activate" ]]; then
        print "Found uv environment in: $current_dir"
        cd $current_dir
        source .venv/bin/activate
        return 0
      else
        print "Warning: Found incomplete uv environment in $current_dir (.venv/bin/activate missing)"
      fi
    fi

    cd ..
    current_dir=$PWD
  done

  cd $initial_dir
  print "Error: No valid uv environment found in parent directories"
  return 1
}

