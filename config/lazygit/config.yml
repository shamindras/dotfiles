# yaml-language-server: $schema=https://raw.githubusercontent.com/jesseduffield/lazygit/master/schema/config.json
gui:
  # stuff relating to the UI
  nerdFontsVersion: "3"
  scrollHeight: 2 # how many lines you scroll by
  scrollPastBottom: true # enable scrolling past the bottom
  sidePanelWidth: 0.3333 # number from 0 to 1
  expandFocusedSidePanel: false
  mainPanelSplitMode: "flexible" # one of 'horizontal' | 'flexible' | 'vertical'
  language: "en" # one of 'auto' | 'en' | 'zh' | 'pl' | 'nl'
  # tokyonight_night theme
  # source: https://github.com/folke/tokyonight.nvim/blob/main/extras/lazygit/tokyonight_night.yml
  theme:
    activeBorderColor:
      - "#ff9e64"
      - "bold"
    inactiveBorderColor:
      - "#27a1b9" # "#494949"
    searchingActiveBorderColor:
      - "#ff9e64"
      - "bold"
    optionsTextColor:
      - "#7aa2f7"
    selectedLineBgColor:
      - "#283457"
    cherryPickedCommitFgColor:
      - "#7aa2f7"
    cherryPickedCommitBgColor:
      - "#bb9af7"
    markedBaseCommitFgColor:
      - "#7aa2f7"
    markedBaseCommitBgColor:
      - "#e0af68"
    unstagedChangesColor:
      - "#db4b4b"
    defaultFgColor:
      - "#c0caf5"
  # If true (default), file icons are shown in the file views. Only relevant if
  # NerdFontsVersion is not empty.
  # showFileIcons: true
  # Window border style.
  # One of 'rounded' (default) | 'single' | 'double' | 'hidden'
  border: "single"
  mouseEvents: true
  skipDiscardChangeWarning: false
  skipStashWarning: true
  # If true, show the '5 of 20' footer at the bottom of list views
  showListFooter: true
  # If true, display the files in the file views as a tree. If false, display
  # the files as a flat list. This can be toggled from within Lazygit with the
  # '~' key, but that will not change the default.
  showFileTree: true
  # If true, show a random tip in the command log when Lazygit starts
  showRandomTip: false
  # If true, show the command log
  showCommandLog: false
  # If true, show the bottom line that contains keybinding info and useful
  # buttons. If false, this line will be hidden except to display a loader for
  # an in-progress action.
  showBottomLine: true
  # If true, show jump-to-window keybindings in window titles.
  showPanelJumps: true
  commandLogSize: 8
  authorColors: # in case you're not happy with the randomly assigned color
    "Shamindra Shrotriya": "blue"
    # use for other authors
    "*": "red"

# use delta for git diffs
git:
  paging:
    useConfig: false
    colorArg: always
    pager: delta --dark --side-by-side --line-numbers --paging=never
  merging:
    # only applicable to unix users
    manualCommit: false
    # extra args passed to `git merge`, e.g. --no-ff
    args: ""
  skipHookPrefix: WIP
  # The main branches. We colour commits green if they belong to one of these branches,
  # so that you can easily see which commits are unique to your branch (coloured in yellow)
  mainBranches: [main, master]
  autoFetch: true
  autoRefresh: true
  branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --"
  allBranchesLogCmd: "git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium"
  overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
  disableForcePushing: true
  parseEmoji: true
  log:
    # one of date-order, author-date-order, topo-order.
    # topo-order makes it easier to read the git log graph, but commits may not
    # appear chronologically. See https://git-scm.com/docs/git-log#_commit_ordering
    order: "topo-order"
    # one of always, never, when-maximised
    # this determines whether the git graph is rendered in the commits panel
    showGraph: "always"
    # displays the whole git graph by default in the commits panel (equivalent to passing the `--all` argument to `git log`)
    showWholeGraph: true

refresher:
  refreshInterval: 10 # file/submodule refresh interval in seconds
  fetchInterval: 60 # re-fetch interval in seconds
update:
  method: prompt # can be: prompt | background | never
  days: 14 # how often an update is checked for
confirmOnQuit: false
# determines whether hitting 'esc' will quit the application when there is nothing to cancel/close
quitOnTopLevelReturn: true
disableStartupPopups: true
notARepository: "prompt" # one of: 'prompt' | 'create' | 'skip'
promptToReturnFromSubprocess: false # display confirmation when subprocess terminates

customCommands:
  # use conventional commits via commitizen
  # source: https://github.com/jesseduffield/lazygit/wiki/Custom-Commands-Compendium#committing-via-commitizen-cz-c
  - key: "C"
    command: "git cz c"
    description: "commit with commitizen"
    context: "files"
    loadingText: "opening commitizen commit tool"
    subprocess: true
  # use conventional commits using custome `gum` script
  # source: https://github.com/joshmedeski/dotfiles/blob/main/.config/bin/gc
  - key: "z"
    command: "~/.config/bin/gc"
    context: "files"
    loadingText: "Commitizen prompt"
    subprocess: true
  # source: https://github.com/jesseduffield/lazygit/wiki/Custom-Commands-Compendium#pruning-branches-no-longer-on-the-remote
  - key: "G"
    command: |
      git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do git branch -D $branch; done
    context: "localBranches"
    description: "Prune local branches no longer on its remote; (G)one."
    loadingText: "Pruning gone..."

# TODO switch from `vim` to `nvim`
os:
  editCommand: "vim"
  editCommandTemplate: "{{editor}} +{{line}} -- {{filename}}"
  openCommand: "open {{filename}}"
